import time

from aiogram.types import Message
from aiogram.filters import Command
from aiogram.types.chat_member_member import ChatMemberMember

from loader import bot_base, checker_router, status_dict, settings_dict, bot
from utils.message_cleaner import message_cleaner


async def check_new_status(user_id):
    """–§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø–æ–ª—É—á–∏–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å –∏–ª–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ"""
    # –ë–µ—Ä–µ–º –∏–∑ –±–∞–∑—ã —Å—Ä–∞–∑—É –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç–∏–≥ –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–æ–≤–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ –∏ –ø–æ—Ä–æ–≥–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
    user_to_points, user_to_status, user_to_last_achievement = await bot_base.get_user_points_status_achievements(user_id)
    # –ù–∏–∂–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∏–≥ –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ—Ä–æ–≥–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
    ach = user_to_points - (user_to_last_achievement if user_to_last_achievement else 0)
    if ach >= settings_dict['achievement']:
        await bot_base.set_last_achievement(user_id, user_to_points)
        ach = True
    else:
        ach = False
    status_points_list = sorted(status_dict)
    c = 0  # –ù—É–∂–Ω–æ –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä–∞ "—Å—Ç–∞—Ç—É—Å–Ω—ã—Ö" –æ—á–∫–æ–≤
    for i in range(len(status_points_list)):
        if user_to_points >= status_points_list[i]:
            c = status_points_list[i]
        else:
            if c > 0 and user_to_status != status_dict[c]:  # –ó–Ω–∞—á–∏—Ç –ø–æ–ª—É—á–µ–Ω –Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å
                await bot_base.set_user_status(user_id, status_dict[c])
                return status_dict[c], ach
    else:
        if c > 0 and user_to_status != status_dict[c]:  # –ó–Ω–∞—á–∏—Ç –ø–æ–ª—É—á–µ–Ω –Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å
            await bot_base.set_user_status(user_id, status_dict[c])
            return status_dict[c], ach
    return None, ach


async def get_username(chat_id, user_id):
    a = await bot.get_chat_member(chat_id, user_id)
    if isinstance(a, ChatMemberMember):
        return ('@' + a.user.username) if a.user.username else a.user.first_name
    return None


# –ö–ª—é—á - id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∑–Ω–∞—á–µ–Ω–∏–µ - –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (unix)
anti_spam_dict = {}


@checker_router.message(Command('karma'))
async def view_user_points_and_status(msg: Message):
    """–í—ã–≤–æ–¥–∏–º –ø–æ–∫–∞–∑–∞–Ω–∏—è –æ—á–∫–æ–≤ –∏ —Å—Ç–∞—Ç—É—Å–∞"""
    if not msg.reply_to_message:
        try:
            user = await bot_base.get_user_info(msg.from_user.id)
            msg_text = (f'‚≠êÔ∏è –í–∞—à–∞ —Ä–µ–ø—É—Ç–∞—Ü–∏—è: <b>{user[1]}</b>\n'
                        f'üéñ –°—Ç–∞—Ç—É—Å: <i>{user[3] if user[3] else "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"}</i>\n'
                        f'üèµ –ù–∞ —Å—á–µ—Ç—É: <b>{user[2]}</b> –±–∞–ª–ª–æ–≤')
        except IndexError:
            msg_text = ('‚≠êÔ∏è –í–∞—à–∞ —Ä–µ–ø—É—Ç–∞—Ü–∏—è: <b>0</b>\n'
                        'üéñ –°—Ç–∞—Ç—É—Å: <i>–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç</i>\n'
                        'üèµ –ù–∞ —Å—á–µ—Ç—É: <b>0</b> –±–∞–ª–ª–æ–≤')
        mess = await msg.reply(msg_text)
        await message_cleaner.schedule_message_deletion(mess.chat.id, mess.message_id)
    else:
        user_name = await get_username(msg.chat.id, msg.reply_to_message.from_user.id)
        try:
            user = await bot_base.get_user_info(msg.reply_to_message.from_user.id)
            msg_text = (f'–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ {user_name}\n‚≠êÔ∏è –†–µ–ø—É—Ç–∞—Ü–∏—è: <b>{user[1]}</b>\n'
                        f'üéñ –°—Ç–∞—Ç—É—Å: <i>{user[3] if user[3] != "None" else "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"}</i>\n'
                        f'üèµ –ù–∞ —Å—á–µ—Ç—É: <b>{user[2]}</b> –±–∞–ª–ª–æ–≤')
        except IndexError:
            msg_text = (f'–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ {user_name}\n‚≠êÔ∏è –†–µ–ø—É—Ç–∞—Ü–∏—è: <b>0</b>\n'
                        f'üéñ –°—Ç–∞—Ç—É—Å: <i>–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç</i>\n'
                        f'üèµ –ù–∞ —Å—á–µ—Ç—É: <b>0</b> –±–∞–ª–ª–æ–≤')
        mess = await msg.answer(msg_text)
        await message_cleaner.schedule_message_deletion(mess.chat.id, mess.message_id)


@checker_router.message(Command('rating'))
async def get_rating(msg: Message):
    """–í—ã–¥–∞–µ—Ç —Ä–µ–π—Ç–∏–Ω–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    all_users = await bot_base.get_all_users()
    msg_text = f'–†–µ–π—Ç–∏–Ω–≥ —á–∞—Ç–∞:\n\n'
    for u in all_users:
        user_name = await get_username(msg.chat.id, u[0])
        if user_name:
            msg_text += f'{user_name} - {u[1]} —Ä–µ–ø—É—Ç–∞—Ü–∏–∏, —Å—Ç–∞—Ç—É—Å <i>{u[3] if u[3] != "None" else "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"}</i>\n'
    mess = await msg.answer(msg_text)
    await message_cleaner.schedule_message_deletion(mess.chat.id, mess.message_id)


@checker_router.message(Command('help'))
async def help_for_users(msg: Message):
    """–ü–æ–¥—Å–∫–∞–∑–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    msg_text = ('–ü–æ–¥—Å–∫–∞–∑–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n\n'
                '/karma - –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ç–µ–∫—É—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –≤—ã–∑–≤–∞–≤—à–µ–≥–æ –∫–æ–º–∞–Ω–¥—É. '
                '–í –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç–æ–≥–æ '
                '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —á—å–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–∞ –≤—ã–∑–≤–∞–Ω–∞ –∫–æ–º–∞–Ω–¥–∞\n\n'
                '/rating - –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, –∫—Ç–æ –ø–æ–ª—É—á–∏–ª —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å')
    mess = await msg.answer(msg_text)
    await message_cleaner.schedule_message_deletion(mess.chat.id, mess.message_id)


@checker_router.message()
async def check_gratitude_in_message(msg: Message):
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä—è—Ç—å –µ—Å—Ç—å –ª–∏ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏"""
    if msg.reply_to_message:

        # –ê–Ω—Ç–∏—Å–ø–∞–º –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –±—ã —Å –ø–æ—Å–ª–µ–¥–Ω–µ–π –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏ –±—ã–ª–æ –Ω–µ –±–æ–ª—å—à–µ 60 —Å–µ–∫—É–Ω–¥
        last = anti_spam_dict.get(msg.reply_to_message.from_user.id, 0)
        last = int(time.time()) - last
        if last >= 60:
            user_id = msg.from_user.id  # –ö—Ç–æ –±–ª–∞–≥–æ–¥–∞—Ä–∏—Ç
            user_to_id = msg.reply_to_message.from_user.id  # –ö–æ–≥–æ –±–ª–∞–≥–æ–¥–∞—Ä–∏—Ç
            if any(word in msg.text.lower() for word in settings_dict['gratitude_list']) and user_id != user_to_id:
                user_name = await get_username(msg.chat.id, user_to_id)
                user_points = await bot_base.get_user_points(user_to_id)
                await bot_base.add_points(user_to_id, 1)
                anti_spam_dict[user_to_id] = int(time.time())
                # –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –∫–æ—Ä—Ç–µ–∂ (—Å—Ç–∞—Ç—É—Å, –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ)
                user_status = await check_new_status(user_to_id)
                msg_text = (f'–í—ã –ø–æ–≤—ã—Å–∏–ª–∏ —Ä–µ–ø—É—Ç–∞—Ü–∏—é {user_name} –Ω–∞ 1 –∏ —Ç–µ–ø–µ—Ä—å –æ–Ω–∞ '
                            f'{user_points if user_points else 1}. {user_name}, '
                            f'—Å–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç–µ –Ω–∞—à–µ–º—É —Å–æ–æ–±—â–µ—Å—Ç–≤—É! üåπ' +
                            (f"{settings_dict['new_status']}\n" if user_status[0] else '') +
                            (settings_dict['new_achievement'] if user_status[1] else '' + f'\n–í—Å–µ–≥–æ —Ä–µ–ø—É—Ç–∞—Ü–∏—è {user_points if user_points else 1}'))
                mess = await msg.reply(msg_text)
                await message_cleaner.schedule_message_deletion(mess.chat.id, mess.message_id)
        else:
            msg_text = f'–°–ª–µ–¥—É—é—â—É—é –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –ø–æ–ª—É—á–∏—Ç—å —á–µ—Ä–µ–∑ <b><i>{60 - last}</i></b> —Å–µ–∫.'
            mess = await msg.reply(msg_text)
            await message_cleaner.schedule_message_deletion(mess.chat.id, mess.message_id)
